<?php
/*
 * Created on 3 dÃ©c. 09
 * by LWR
 */
$exec = $this->getExecutionService();
if(!isset($elS)) $elS = ServiceProvider::getElementService();
if(!isset($transS)) $transS = ServiceProvider::getTranslationService();

$fieldXml = $field->getXml();
$elementId = $this->getRecord()->getId();

/******************
 * Preview only!!!!
 ******************/
if($fieldXml["displayPreviewOnly"]=="1" && !$this->isForNotification() && !$this->isForExternalAccess()){
	//no value
/******************
 * Normal view
 ******************/
} else if($this->isForNotification() && $fieldXml["htmlArea"]=="1" && $fieldXml["displayContentInNotification"]=="1"){
	$this->put($this->formatValueFromRecord($fieldName, "textContent", $this->getRecord()));
} else {
	$size = $this->formatValueFromRecord($fieldName, "size", $this->getRecord());
	$date = $this->formatValueFromRecord($fieldName, "date", $this->getRecord());
	$path = $this->getRecord()->getFieldValue($fieldName, "path");
	$name = $this->formatValueFromRecord($fieldName, "name", $this->getRecord());
	$type = $this->formatValueFromRecord($fieldName, "type", $this->getRecord());
	
	//the ssrc is used for the media unzip, pdf, or html type
	if(is_a($this->getRecord(), "ActivityRecord")){
		$ssrc = $exec->getCrtWigiiNamespace()->getWigiiNamespaceUrl()."/".$exec->getCrtModule()->getModuleUrl()."/download/".$this->getRecord()->getActivity()->getActivityName()."/".$field->getFieldName()."/".$this->getRecord()->getAttachedRecord()->getId();
	} else if($this->isForExternalAccess()) {
		$ssrc = $exec->getCrtWigiiNamespace()->getWigiiNamespaceUrl()."/".$exec->getCrtModule()->getModuleUrl()."/downloadFromExternalAccess/".$exec->getCrtParameters(0)."/download/".$elementId."/".$field->getFieldName();
	} else {
		$ssrc = $exec->getCrtWigiiNamespace()->getWigiiNamespaceUrl()."/".$exec->getCrtModule()->getModuleUrl()."/download/".$elementId."/".$field->getFieldName();
	}
	$src = SITE_ROOT.$ssrc;
	
	//the default preview management is done into the download part
	//add the time to prevent rpeview caching!!!
	//$this->put('<img src="'.$src.'/thumbs?_'.time().'" />');
	
	//filename and date
	$this->put('<div style="word-wrap:break-word;" >');
	$this->put('<span style="font-weight:bold;" >');
	$this->put($name.$type);
	$this->put('</span><br>');
	$this->put('<span style="font-size:10px;font-style:italic;" >('.$date.')</span>');
	$this->put('</div>');
	
	/**
	 * Add other specific buttons based on the file type
	 */
	if(!$this->isForNotification() && !is_a($this->getRecord(), "ActivityRecord")){
		$mediaId = $fieldName.'_file_media';
		switch ($type){
			case ".aif":
			case ".aiff":
			case ".mid":
			case ".midi":
			case ".ogg":
			case ".au":
			case ".aac":
			case ".rm":
			case ".ra":
				break;
			case ".mp3":
			case ".wav":
			case ".wma":
				//flowplayer
				$this->put('<a href="'.$src.'/test'.$type.'" style="float:left;margin-top:5px;width:'.$parentWidth.'px;height:26px" id="'.$mediaId.'"></a>');
				$exec->addJsCode("displayAudioPlayer('$mediaId');");
				break;
			case ".wmv":
			case ".avi":
			case ".mpg":
			case ".mpeg":
			case ".mp4":
			case ".h264":
			case ".3g2":
			case ".mov":
			case ".ram":
			case ".swf":
				//no player for those format
				break;
			case ".flv":
			case ".h264":
			case ".h.264":
			case ".H.264":
				//the player is after the download button
				break;
			case ".zip":
				if(!doesZipHaveAnIndexFile(FILES_PATH.$path)) {
					break; 
				}
				$this->put('<div class="mediaPreview generalButton G ui-corner-all" onclick="update(\'elementPreview/'.$ssrc.'/unzipForViewing/\');" ><img src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/search.png" /><span>'.$this->t("view").'</span></div>');
				break;
			case ".pdf":
				$this->put('<div class="mediaPreview generalButton G ui-corner-all" onclick="update(\'elementPreview/'.$ssrc.'/unzipForViewing/\');" ><img src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/search.png" /><span>'.$this->t("read").'</span></div>');
//				if($fieldXml["forceDisplayContent"]=="1"){
//					$exec->addRequests('elementPreview/'.$ssrc.'/unzipForViewing/');
//				}
				break;
			case ".html":
			case ".htm":
				//create a modify button to do a lock + modify: only if modify and html type
				$this->put('<div class="read generalButton G ui-corner-all" onclick="previewHtml(\''.$src.'\', \''.time().'\');" ><img src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/search.png" /><span>'.$this->t("read").'</span></div>');
//				if($fieldXml["forceDisplayContent"]=="1"){
//					$exec->addJsCode('previewFile(\''.$src.'\', \''.time().'\');');
//				}
				$this->put('<div class="print generalButton G ui-corner-all" onclick="var w = window.open(\''.$src.'/integrated\'); setTimeout(function(){ w.print(); }, 3000);" ><img src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/print.png" /><span>'.$this->t("").'</span></div>');
//				$this->put('<div class="lockAndModify'.$field->getFieldName().' generalButton G ui-corner-all" style="margin-top:4px; margin-right:5px;" onclick="update(\'elementDialog/'.$exec->getCrtWigiiNamespace()->getWigiiNamespaceUrl()."/".$exec->getCrtModule()->getModuleUrl()."/element/lockAndModify/".$elementId."/".$field->getFieldName().'\');" ><img style="margin-left:5px;vertical-align:middle;" src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/edit.png" /><span class="" style="margin-left:5px;margin-right:5px;">'.$this->t("lockAndModify").'</span></div>');
//				//if no modify rights then mask the lockAndModify button
//				$exec->addJsCode("
//if($('#elementDetail_toolbar .onlyWriteRights').length==0){
//	$('#elementDialog .elementDetail .field .value div.lockAndModify".$field->getFieldName()." ').hide();
//}
//");
				break;
			case ".jpg":
			case ".jpeg":
			case ".gif":
			case ".png":
			case ".bmp":
				//create a tempPublicUrl to preview the content
				$this->put('<div class="mediaPreview generalButton G ui-corner-all" onclick="previewImage(\''.$src.'\', \''.time().'\');" ><img src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/search.png" /><span>'.$this->t("view").'</span></div>');
				$this->put('<div class="print generalButton G ui-corner-all" style="margin-top:4px; margin-right:5px;" onclick="var w = window.open(\''.$src.'/integrated\'); setTimeout(function(){ w.print(); }, 3000);" ><img src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/print.png" /><span>'.$this->t("").'</span></div>');
				break; 
		}
		
		//add the check-in/out button
		if(!$this->isForExternalAccess()){
			// 1) the element is not locked -> check-out button
			$isCheckout = false;
			if(!$this->getRecord()->isState_locked()){
				$isCheckout = true;
				$this->put('<div class="checkOutIn'.$field->getFieldName().' generalButton G ui-corner-all"><img src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/lock.png" /><span>'.$this->t("checkout").'</span></div>');
			}
			// 2) the element is locked by you -> check-in button
			if($this->getRecord()->isState_locked() && $this->getRecord()->getSys_user() == $exec->getExecPrincipal()->getUserId()){
				$isCheckout = false;
				$this->put('<div class="checkOutIn'.$field->getFieldName().' generalButton G ui-corner-all" ><img src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/unlock.png" /><span>'.$this->t("checkin").'</span></div>');
			}
			$exec->addJsCode("setListenersToCheckInOutFiles($elementId, '".$field->getFieldName()."', '".($isCheckout ? "download/checkoutFile" : "element/checkinFile")."', '".($isCheckout ? $this->t("checkoutTitleText") : $this->t("checkinTitleText"))."', '".$this->t("ok")."', '".$this->t("cancel")."');");
		}
	}
	
	
	//add the download button
	$this->put('<div class="clear"></div>');
	if(!$this->isForNotification()){
		//download button
		//$this->put('<a href="'.$src.'" target="_self" style="text-decoration:none;"><div class="generalButton G ui-corner-all " style="margin-top:4px;"><img style="border:none; float:left;" src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/download.png" /><span style="float:left; margin-left:5px; ">'.$this->t("download").'</span></div></a>');
		$this->put('<a href="javascript:download(\''.$src.'\');" target="_self" style="text-decoration:none;"><div class="generalButton G ui-corner-all "><img src="'.SITE_ROOT_forFileUrl.'images/icones/sanscons/download.png" /><span>'.$this->t("download").'</span></div></a>');
	} else {
		//link button
		$this->put('<div style="float:left; margin-left:5px; margin-top:10px;" >');
		$this->put($elS->displayElementId($this->getP(), $this->getRecord(), $exec->getCrtWigiiNamespace(), $exec->getCrtModule(), null, true, $this->t("download")));
		$this->put('</div>');
	}
	//add the size after the download button
	$this->put('<div style="float:left; margin-left:5px; margin-top:10px;" >');
	$this->put('('.$size.')');
	$this->put('</div>');
	
	//for video the player is after the download button
	if(!$this->isForNotification() && !is_a($this->getRecord(), "ActivityRecord")){
		$mediaId = $fieldName.'_file_media';
		switch ($type){
			case ".flv":
			case ".h264":
			case ".h.264":
			case ".H.264":
				//VIDEO files
				$width = $this->getDetailRenderer()->getLabelWidth()+$this->getDetailRenderer()->getValueWidth()+5;
//				//flowplayer
				$this->put('</div>'); //end value div, to begin a full width player
				$this->put('<div style="float:left;padding-bottom:5px;padding-top:-5px;">'); //open a new div in field
				$this->put('<a class="SBB" href="'.$src.'/test'.$type.'" style="float:left;width:'.$width.'px;height:300px;" id="'.$mediaId.'"></a>');
				$exec->addJsCode("displayVideoPlayer('$mediaId');");
				break;
		}
	}
	
}



